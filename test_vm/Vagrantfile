# -*- mode: ruby -*-
# vi: set ft=ruby :

require 'rbconfig'
is_windows = (RbConfig::CONFIG['host_os'] =~ /mswin|mingw|cygwin/)
local_config_path = File.expand_path("../vagrantconfig-local.yaml", __FILE__)
CONFIG = File.exist?(local_config_path) ? YAML.load(File.read(local_config_path)) : {}

VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  config.vm.provider "virtualbox" do |vb|
    vb.customize ["modifyvm", :id, "--memory", CONFIG['memory'] || "1100"]
  end

  config.omnibus.chef_version = :latest
  config.vbguest.auto_update = true

  config.vm.box = "dbfitvm-test"
  config.vm.box_url = "http://opscode-vm-bento.s3.amazonaws.com/vagrant/virtualbox/opscode_centos-6.5_chef-provisionerless.box"
  config.vm.host_name = "dbfitvm"
  config.vm.network "private_network", ip: "192.168.33.10"
  config.vm.synced_folder "..", "/var/dbfit", :nfs => !is_windows,
    :nfs_version => 4, :mount_options => ["noatime", "nodiratime"]

  config.vm.provision :chef_solo do |chef|
    chef.add_recipe "dbfit_test"

    chef.json = {
      "mysql" => {
        "server_root_password" => "password",
        "server_repl_password" => "password",
        "server_debian_password" => "password",
        "bind_address" => "127.0.0.1",
      },
      "postgresql" => {
        "password" => {
          "postgres" => "postgres"
        },
        "version" => "9.3",
        "enable_pgdg_yum" => true
      },
      "java" => {
        "install_flavor" => "oracle",
        "jdk_version" => "8",
        "oracle" => {
          "accept_oracle_download_terms" => true
        }
      },
      "git" => {
        "version" => "1.9.1"
      },
      "run_list" => ["recipe[dbfit_test]"]
    }
  end
end

